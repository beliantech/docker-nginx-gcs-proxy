user nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include           /etc/nginx/mime.types;
    default_type      application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" upstream: "$upstream_addr"';
    access_log        /var/log/nginx/access.log  main;

    server_tokens     off;

    sendfile        on;

    keepalive_timeout  65;

    gzip              on;
    gzip_disable      "msie6";
    gzip_comp_level   6;
    gzip_min_length   1100;
    gzip_buffers      16 8k;
    gzip_proxied      any;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/xml+rss;

    resolver          8.8.8.8 valid=300s ipv6=off;
    resolver_timeout  10s;

    upstream gcs {
       server          storage.googleapis.com:443;
       keepalive       128;
    }

    {{ if eq .Env.PROXY_CACHE "true" }}
    proxy_cache_path      /var/cache/nginx keys_zone=google-cloud-storage:10m inactive={{ .Env.PROXY_CACHE_INACTIVE }};
    proxy_cache           google-cloud-storage;
    proxy_cache_key       "$host/$proxy_host$uri";
    proxy_cache_valid     200 {{ .Env.PROXY_CACHE_DURATION }};
    proxy_cache_valid     404 1m;
    {{ end }}

    server {
        listen          {{ .Env.LISTEN_PORT }};

        recursive_error_pages on;

        if ( $request_method !~ "GET|HEAD" ) {
            return 405;
        }

        location = / {
            rewrite ^.*$ /index.html last;
        }

        location = /healthz/ {
            access_log off;
            return 200;
        }

        location ~ {{ .Env.SERVICE_WORKER_FILENAME }} {
            expires off;
            add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            proxy_no_cache "1";
            proxy_pass              https://gcs/{{ .Env.GCS_BUCKET }}{{ .Env.OBJECT_PREFIX }}$uri;
        }

        location / {
            {{ if eq .Env.CORS "true" }}
            if ( $request_method ~* "(GET|HEAD)" ) {
                add_header "Access-Control-Allow-Origin"  {{ .Env.CORS_ALLOWED_ORIGINS }};
            }
            if ( $request_method = OPTIONS ) {
                add_header "Access-Control-Allow-Origin"  {{ .Env.CORS_ALLOWED_ORIGINS }};
                add_header "Access-Control-Allow-Methods" "GET, OPTIONS, HEAD";
                add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                return 200;
            }
            {{ end }}

            proxy_set_header        Host storage.googleapis.com;
            proxy_set_header        Cookie "";
            proxy_set_header        Authorization "";
            proxy_set_header        Connection "";
            proxy_hide_header       x-goog-hash;
            proxy_hide_header       x-goog-generation;
            proxy_hide_header       x-goog-metageneration;
            proxy_hide_header       x-goog-stored-content-encoding;
            proxy_hide_header       x-goog-stored-content-length;
            proxy_hide_header       x-goog-storage-class;
            proxy_hide_header       x-guploader-uploadid;
            proxy_hide_header       x-xss-protection;
            proxy_hide_header       x-goog-meta-goog-reserved-file-mtime;
            proxy_hide_header       accept-ranges;
            proxy_hide_header       alternate-protocol;
            proxy_hide_header       Set-Cookie;
            proxy_hide_header       Expires;
            proxy_ignore_headers    Set-Cookie;
            proxy_http_version      1.1;
            proxy_intercept_errors  on;
            proxy_method            GET;
            proxy_pass_request_body off;

            {{ if eq .Env.PROXY_CACHE "true" }}
            add_header              X-Cache $upstream_cache_status;
            {{ end }}

            {{ if eq .Env.REDIRECT_404_TO_INDEX "true" }}
            error_page              404 =200 /index.html;
            {{ end }}

            {{ if ne .Env.CACHE_CONTROL "none" }}
            proxy_hide_header       Cache-Control;
            proxy_ignore_headers    "Expires" "Cache-Control";
            expires {{ .Env.CACHE_CONTROL_DURATION }};
            add_header Cache-Control "{{ .Env.CACHE_CONTROL }}";
            {{ end }}

            proxy_pass              https://gcs/{{ .Env.GCS_BUCKET }}{{ .Env.OBJECT_PREFIX }}$uri;
        }
    }
}
